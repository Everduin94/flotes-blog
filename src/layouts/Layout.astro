---
export interface Props {
  title: string;
  metaDescription: string;
  metaImg: string;
  metaType: 'website' | 'article'
}
import { SEO } from "astro-seo";
const { title, metaDescription, metaImg, metaType } = Astro.props;
const defaultDescription = 'Web Dev Blog about Svelte, SvelteKit, Tailwind CSS, Astro, Supabase, Postgres, Typescript, Workflows, Productivity, Software Development, How to write better software. Roadmap and upcoming changes to the notetaking study app Flotes.'
import Footer from "../components/Footer.astro";
import "../styles/global.css";
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <!-- <meta name="description" content={metaDescription ?? defaultDescription}>
    <title>Flotes Blog {title ? '-' : ''} {title}</title> -->
    <SEO
      title={`Flotes Blog ${title ? '-' : ''} ${title}`}
      description={metaDescription ?? defaultDescription}
      openGraph={{
        basic: {
          title: `${title}`,
          type: metaType ?? 'website',
          image: metaImg ?? 'https://ik.imagekit.io/flotes/flotes-header.png?ik-sdk-version=javascript-1.4.3&updatedAt=1674667619507',
        },
        image: {
            alt: 'Header Banner'
          }
      }}
      twitter={{
        creator: "@BoogersLLC"
      }}
      extend={{
        // extending the default link tags
        link: [{ rel: "icon", href: "/favicon.ico" }],
        // extending the default meta tags
        meta: [
          {
            name: "twitter:image",
            content: metaImg,
          },
          { name: "twitter:title", content: title},
          { name: "twitter:description", content: metaDescription ?? defaultDescription},
        ],
      }}
    />

    <script is:inline>
      const theme = (() => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
      })();

      if (theme === "light") {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }

      window.localStorage.setItem("theme", theme);
    </script>
  </head>
  <body>
    <div class="grid justify-items-center grid-cols-1 grid-rows-top-2 h-full">
      <div class="max-w-2xl w-full sm:px-2 px-3">
        <slot />
      </div>
      <div class="max-w-2xl w-full sm:px-2 px-3">
        <Footer />
      </div>
    </div>
  </body>
</html>
<style is:global>
  :root {
    --accent: 124, 58, 237;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      #da62c4 30%,
      white 60%
    );
  }
  html {
    font-family: system-ui, sans-serif;
  }
  code {
    font-family: Menlo, Monaco, Lucida Console, Liberation Mono,
      DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
  }
</style>
